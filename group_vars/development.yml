services_ip: 10.0.3.2
backend_ip: 10.0.3.3

# Paths
apps:
  frontend:
    is_git: False
    location: /var/lib/frontend
    git_repo: ssh://git@lab.castawaylabs.com/nodegear/ng-frontend.git
    env: ",NODEMON=1,NODE_ENV=development,PORT=80"
    version: master
  backend:
    is_git: False
    location: /var/lib/backend
    git_repo: ssh://git@lab.castawaylabs.com/nodegear/ng-backend.git
    env: "NODE_ENV=development"
    version: master
  git:
    is_git: False
    location: /var/lib/git
    git_repo: ssh://git@lab.castawaylabs.com/nodegear/ng-git.git
    env: "NODE_ENV=development,NODEMON=1"
    version: master
  fs:
    is_git: True
    location: /var/lib/fs
    git_repo: git://github.com/nodegear/fs-api.git
    env: "NODE_ENV=development"
    version: master
    ip: "{{ services_ip }}"
    port: 8888
    dir: /var/lib/fs_storage
    auth: ng_fs
  graphite:
    user: castaway
    password: AnsibleRocks
    ip: "{{ services_ip }}"
    statsd: 8125
    graphite: 8080
    carbon: 2003

# Backend
server_id: vagrant-dev
server_name: Vagrant
server_price: 0.007
server_memory: 256
server_ip: "{{ backend_ip }}"

# Misc
currency: USD

# Mongolab
mongolab_endpoint: ""
mongolab_sso_salt: ""

# Frontend switches
use_analytics: false
is_ssl: false

# Redis/mongo/mysql (services stuff)
redis_ip: "{{ services_ip }}"
mongo_ip: "{{ services_ip }}"
admin_mysql_ip: "{{ services_ip }}"
admin_mongodb_ip: "{{ services_ip }}"

redis_port: 6379
mongodb_port: 2017

# MMS Backup API key
mms_key: ""

# Other API keys
redis_key: yep
newrelic_key: ""
bugsnag_key: ""
newrelic_license_key: ""

# Payment
stripe_pub: pk_test_YmJEMIhaSRCwfxuoKEJzt7z0
stripe_secret: sk_test_mmZnb9OiVoxdrFj6wuQGvMvP

# SMTP
smtp_user: "matej@matej.me"
smtp_pass: eELIT9FIJIU52NaWvrMrPg

# Mailchimp
mailchimp_key: "14a2b0fb24c20dd3857cb4bae602be35-us7"

# Databases..

# The nodegear mongodb admin authentication
mongodb_admin_user: castawaylabs
mongodb_admin_pass: mongodb_admin_pass
mongodb_admin_permissions: "{ role: 'userAdminAnyDatabase', db: 'admin' }, { role: 'readWriteAnyDatabase', db: 'admin' }, { role: 'dbAdminAnyDatabase', db: 'admin' }, { role: 'root', db: 'admin' }"

# What nodegear uses for authentication to db above
mongodb_auth_user: ng
mongodb_auth_pass: mongodb_auth_pass
mongodb_auth_permissions: "{ role: 'readWrite', db: 'ng' }"

# Separate databases for client connections
admin_mysql_user: admin
admin_mysql_pass: mysql_password
admin_mongodb_user: admin
admin_mongodb_pass: admin_mongodb_pass
